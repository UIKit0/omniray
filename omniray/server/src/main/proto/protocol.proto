import "datastructures.proto";

package org.vertexarmy.omniray.server.protocol;

message Request {
    enum Type {
        // used to test the responsiveness of the server
        REQUEST_CONNECTION = 1;

        // used by the client to post a task
        CLIENT_REQUEST_POST_TASK = 2;

        // used by the client to request the results for a task
        CLIENT_REQUEST_TASK_RESULT = 3;

        // used by the worker to request a new task
        WORKER_REQUEST_NEW_TASK = 4;

        // used by the worker to return the result of a task
        WORKER_TASK_FINISHED = 5;
    }

    message ClientRequestPostTask {
        required org.vertexarmy.omniray.raytracer.Task task = 1;
    }

    message ClientRequestTaskResult {
        required string task_id = 1;
    }

    message WorkerTaskFinished {
        required string task_id = 1;
        repeated int32 task_result = 2;
    }

    required Type type = 1;

    optional ClientRequestPostTask client_request_post_task = 2;

    optional ClientRequestTaskResult client_request_task_result = 3;

    optional WorkerTaskFinished worker_task_finished = 4;
}

message Reply {
    enum Type {
        // response indicating the server is alive
        REPLY_CONNECTION = 1;

        // response to a client's request to post a new task
        CLIENT_REPLY_POST_TASK = 3;

        // response to a client's request for task results
        CLIENT_REPLY_TASK_RESULT = 4;

        // response for a new task request from a worker
        WORKER_REPLY_NEW_TASK = 2;

        // response acknowledging the results of a task from a worker
        WORKER_REPLY_TASK_FINISHED = 5;
    }

    message ClientReplyPostTask {
        required string id = 1;
    }

    message ClientReplyTaskResult {
        repeated org.vertexarmy.omniray.raytracer.ColorBuffer result_buffer = 1;
    }

    message WorkerReplyNewTask {
        optional string task_id = 1;
        optional org.vertexarmy.omniray.raytracer.Task task = 2;
    }

    required Type type = 1;

    optional ClientReplyPostTask client_reply_post_task = 2;

    optional ClientReplyTaskResult client_reply_task_result = 3;

    optional WorkerReplyNewTask worker_reply_new_task = 4;
}
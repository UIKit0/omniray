package org.vertexarmy.omniray.server.protocol;

message Request {
    enum Type {
        // meta and misc
        CONNECT = 1;
        PEER_LIST = 2;
        PING = 3;

        // worker
        NEW_TASK = 4;
        PROGRESS_REPORT = 5;
        TASK_RESULT = 6;

        // client
    }

    message Connect {
        required string id = 1;
    }

    required Type type = 1;

    optional Connect connect = 2;
}

message Reply {
    enum Type {
        // meta and misc
        CONNECT = 1;
        PEER_LIST = 2;
        PONG = 3;
        ERROR = 4;

        // worker
        NEW_TASK = 5;
        PROGRESS_REPORT = 6;
        TASK_RESULT = 7;

        // client
    }

    message Connect {
        required bool accepted = 1;
    }

    message PeerList {
        repeated string peers = 1;
    }

    message NewTask {
        required Task task = 1;
    }

    message Error {
        required string message = 1;
    }

    required Type type = 1;

    optional Connect connect = 2;
    optional PeerList peerList = 3;
    optional NewTask newTask = 4;
    optional Error error = 5;
}

message Vertex {
    required float x = 1;
    required float y = 2;
    required float z = 3;
}

message Quaternion {
    required float x = 1;
    required float y = 2;
    required float z = 3;
    required float w = 4;
}

message Material {
    required float color = 1;
}

message Sphere {
    required Vertex position = 1;
    required float radius = 2;

    optional Material material = 3;
}

message Cube {
    required Vertex position = 1;
    required Quaternion rotation = 2;
    required float length = 3;

    optional Material material = 4;
}

message RenderOptions {
    required float width = 1;
    required float height = 2;
}

message Scene {
    repeated Sphere spheres = 1;
    repeated Cube cubes = 2;
    required RenderOptions renderOptions = 3;
}

message Rectangle {
    required float x = 1;
    required float y = 2;
    required float w = 3;
    required float h = 4;
}

message Task {
    required Scene scene = 1;
    required RenderOptions renderOptions = 2;
    required Rectangle area = 3;
}